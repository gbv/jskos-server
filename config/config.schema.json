{
  "$id": "https://gbv.github.io/jskos-server/config.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "JSKOS Server Config",
  "description": "Configuration file for JSKOS Server",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "baseUrl": {
      "description": "The baseUrl of the API",
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "string",
          "format": "uri"
        }
      ]
    },
    "title": {
      "description": "A custom title of the JSKOS API instance",
      "type": "string"
    },
    "env": {
      "description": "The environment the server is run in",
      "type": "string",
      "enum": [
        "production",
        "development",
        "test"
      ]
    },
    "version": {
      "description": "The version of the JSKOS API specification that is used; do not set manually (uses `apiVersion` field from package.json)",
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "string",
          "pattern": "^\\d+\\.\\d+$"
        }
      ]
    },
    "serverVersion": {
      "description": "The version of JSKOS server that a particular instance is running; do not set manually (uses `version` field from package.json)",
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+$"
        }
      ]
    },
    "closedWorldAssumption": {
      "description": "If false, empty JSKOS closed world statements (see specs) will be removed from returned entities",
      "type": "boolean"
    },
    "namespace": {
      "description": "A namespace string that is used for generating unique URIs.",
      "type": "string"
    },
    "verbosity": {
      "description": "Sets the verbosity level for console output (log/warn/error, default: warn)",
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string",
          "enum": [
            "log",
            "warn",
            "error"
          ]
        }
      ]
    },
    "port": {
      "description": "The port under which JSKOS Server is listening",
      "type": "integer",
      "minimum": 0,
      "maximum": 65535
    },
    "proxies": {
      "description": "A list of proxy IP addresses or ranges",
      "$ref": "#/definitions/ips"
    },
    "mongo": {
      "description": "MongDB Configuration",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "user": {
          "type": "string"
        },
        "pass": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "number"
        },
        "db": {
          "type": "string"
        },
        "options": {
          "type": "object"
        }
      }
    },
    "auth": {
      "description": "Describes authentication capabilities",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "algorithm": {
          "description": "The encryption algorithm used by the login-server that provides the JWTs that are used for authenticaton",
          "type": "string"
        },
        "key": {
          "description": "The public key or symmetric secret of the login-server that is used for authentication",
          "anyOf": [
            {
              "type": "null"
            },
            {
              "type": "string"
            }
          ]
        }
      }
    },
    "identityProviders": {
      "$ref": "#/definitions/identityProviders"
    },
    "identities": {
      "$ref": "#/definitions/identities"
    },
    "ips": {
      "$ref": "#/definitions/ips"
    },
    "anonymous": {
      "$ref": "#/definitions/anonymous"
    },
    "schemes": {
      "$ref": "#/definitions/capabilityAndForbidMappingAndAnnotationOnlyProperties"
    },
    "concepts": {
      "$ref": "#/definitions/capabilityAndForbidMappingAndAnnotationOnlyProperties"
    },
    "concordances": {
      "$ref": "#/definitions/capabilityAndForbidMappingAndAnnotationOnlyProperties"
    },
    "mappings": {
      "$ref": "#/definitions/capabilityAndForbidAnnotationOnlyProperties"
    },
    "annotations": {
      "$ref": "#/definitions/capabilityAndForbidMappingOnlyProperties"
    }
  },
  "definitions": {
    "capabilityAndForbidMappingOnlyProperties": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/capability"
            },
            {
              "$ref": "#/definitions/forbidMappingOnlyProperties"
            }
          ]
        }
      ]
    },
    "capabilityAndForbidAnnotationOnlyProperties": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/capability"
            },
            {
              "$ref": "#/definitions/forbidAnnotationOnlyProperties"
            }
          ]
        }
      ]
    },
    "capabilityAndForbidMappingAndAnnotationOnlyProperties": {
      "anyOf": [
        {
          "type": "boolean"
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/capability"
            },
            {
              "$ref": "#/definitions/forbidMappingOnlyProperties"
            },
            {
              "$ref": "#/definitions/forbidAnnotationOnlyProperties"
            }
          ]
        }
      ]
    },
    "capability": {
      "description": "Describes capabilities for a certain item type.",
      "additionalProperties": false,
      "type": "object",
      "definitions": {
        "auth": {
          "description": "Indicates whether a certain action requires authentication.",
          "type": "boolean"
        },
        "crossUser": {
          "description": "Indicates whether a certain action can be performed on items that were created by a different user (boolean or list of user URIs).",
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uri"
              }
            }
          ]
        }
      },
      "properties": {
        "read": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "auth": {
                  "$ref": "#/definitions/capability/definitions/auth"
                },
                "identityProviders": {
                  "$ref": "#/definitions/identityProviders"
                },
                "identities": {
                  "$ref": "#/definitions/identities"
                },
                "ips": {
                  "$ref": "#/definitions/ips"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "create": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "auth": {
                  "$ref": "#/definitions/capability/definitions/auth"
                },
                "anonymous": {
                  "$ref": "#/definitions/anonymous"
                },
                "identityProviders": {
                  "$ref": "#/definitions/identityProviders"
                },
                "identities": {
                  "$ref": "#/definitions/identities"
                },
                "ips": {
                  "$ref": "#/definitions/ips"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "update": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "auth": {
                  "$ref": "#/definitions/capability/definitions/auth"
                },
                "crossUser": {
                  "$ref": "#/definitions/capability/definitions/crossUser"
                },
                "anonymous": {
                  "$ref": "#/definitions/anonymous"
                },
                "identityProviders": {
                  "$ref": "#/definitions/identityProviders"
                },
                "identities": {
                  "$ref": "#/definitions/identities"
                },
                "ips": {
                  "$ref": "#/definitions/ips"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "delete": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "auth": {
                  "$ref": "#/definitions/capability/definitions/auth"
                },
                "crossUser": {
                  "$ref": "#/definitions/capability/definitions/crossUser"
                },
                "anonymous": {
                  "$ref": "#/definitions/anonymous"
                },
                "identityProviders": {
                  "$ref": "#/definitions/identityProviders"
                },
                "identities": {
                  "$ref": "#/definitions/identities"
                },
                "ips": {
                  "$ref": "#/definitions/ips"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "identityProviders": {
          "$ref": "#/definitions/identityProviders"
        },
        "identities": {
          "$ref": "#/definitions/identities"
        },
        "ips": {
          "$ref": "#/definitions/ips"
        },
        "moderatingIdentities": {
          "$ref": "#/definitions/identities"
        },
        "anonymous": {
          "$ref": "#/definitions/anonymous"
        },
        "cardinality": {
          "type": "string",
          "enum": [
            "1-to-1",
            "1-to-n"
          ]
        },
        "fromSchemeWhitelist": {
          "anyOf": [
            {
              "type": "null"
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "uri"
                ],
                "properties": {
                  "uri": {
                    "type": "string",
                    "format": "uri"
                  },
                  "identifier": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          ]
        },
        "toSchemeWhitelist": {
          "anyOf": [
            {
              "type": "null"
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "uri"
                ],
                "properties": {
                  "uri": {
                    "type": "string",
                    "format": "uri"
                  },
                  "identifier": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          ]
        },
        "mismatchTagVocabulary": {
          "anyOf": [
            {
              "type": "null"
            },
            {
              "type": "object"
            }
          ]
        }
      }
    },
    "identityProviders": {
      "description": "A list of identity providers, one of which is required to perform a certain action. `null` if not applicable.",
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ]
    },
    "identities": {
      "description": "A list of identity URIs that are allowed to perform a certain action. `null` if not applicable.",
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          }
        }
      ]
    },
    "ips": {
      "description": "A list of IP addresses or IP ranges that are allowed to perform a certain action. `null` if not applicable.",
      "anyOf": [
        {
          "type": "null"
        },
        {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\/(?:3[0-2]|[0-2]?[0-9]))?$"
          }
        }
      ]
    },
    "anonymous": {
      "description": "Indicates whether a certain action can be performed anonymously (i.e. no creator/contributor will be saved).",
      "type": "boolean"
    },
    "forbidMappingOnlyProperties": {
      "$comment": "Use in non-mapping definitions. Needed to ensure that no additional properties are allowed.",
      "not": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "cardinality"
            ]
          },
          {
            "type": "object",
            "required": [
              "fromSchemeWhitelist"
            ]
          },
          {
            "type": "object",
            "required": [
              "toSchemeWhitelist"
            ]
          }
        ]
      }
    },
    "forbidAnnotationOnlyProperties": {
      "$comment": "Use in non-annotation definitions. Needed to ensure that no additional properties are allowed.",
      "not": {
        "anyOf": [
          {
            "type": "object",
            "required": [
              "mismatchTagVocabulary"
            ]
          }
        ]
      }
    }
  }
}
